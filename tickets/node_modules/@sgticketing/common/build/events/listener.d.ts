import { Stan, Message } from 'node-nats-streaming';
import { Event } from './event';
import { EventNames } from './event-names';
export interface ListenerOptions {
    client: Stan;
    queueGroupName: string;
}
export declare abstract class Listener<T extends Event<any>> {
    abstract eventName: EventNames;
    private client;
    private queueGroupName;
    manualAckMode: boolean;
    ackWait: number;
    constructor(options: ListenerOptions);
    subscriptionOptions(): import("node-nats-streaming").SubscriptionOptions;
    listen(): void;
    private parseMessage;
    abstract onEvent(event: T['data'], message: Message): any;
}
